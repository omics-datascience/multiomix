services:
    # PostgreSQL
    db:
        image: postgres:16
        restart: 'always'
        command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
        environment:
            # IMPORTANT: these three params must be the same as POSTGRES_USERNAME, POSTGRES_PASSWORD, POSTGRES_DB
            # below in 'multiomix' service respectively
            POSTGRES_USER: 'multiomics'
            POSTGRES_PASSWORD: 'multiomics'
            POSTGRES_DB: 'multiomics'
            POSTGRES_HOST_AUTH_METHOD: 'trust'
        volumes:
            - postgres_data:/var/lib/postgresql/data/
            - ./config/postgres/postgres.conf:/etc/postgresql/postgresql.conf
        # There's a problem with IPVS connections timeout.
        # See: https://github.com/moby/moby/issues/37466 or https://stackoverflow.com/a/64507844/7058363
        deploy:
            endpoint_mode: dnsrr

    # MongoDB Server
    mongo:
        image: mongo:4.2
        restart: 'always'
        environment:
            # IMPORTANT: these three params must be the same as MONGO_USERNAME, MONGO_PASSWORD, MONGO_DB
            # below in 'multiomix' service respectively
            MONGO_INITDB_ROOT_USERNAME: 'multiomics'
            MONGO_INITDB_ROOT_PASSWORD: 'multiomics'
            MONGO_INITDB_DATABASE: 'multiomics'
        # Sets the config file
        command: --config /etc/mongo/mongod.conf
        volumes:
            - mongo_data:/data/db
            - mongo_config:/data/configdb
            - ./config/mongo/mongod.conf:/etc/mongo/mongod.conf

    # Redis Server for Websockets connections
    redis:
        image: redis:6.2.14-alpine
        restart: 'always'
        volumes:
            - redis_data:/data

    # Django Proxy Server
    nginx:
        image: nginx:1.23.3
        restart: 'always'
        ports:
            - '80:8000'
            # - '443:443' # Uncomment for HTTPS support
        volumes:
            - ./config/nginx/conf.d:/etc/nginx/conf.d
            - ./config/nginx/certificates:/etc/nginx/certificates
            - static_data:/static
            - media_data:/media
        depends_on:
            - multiomix

    # Celery worker for correlation analysis
    correlation-analysis-worker:
        image: omicsdatascience/multiomix:5.2.4-celery
        restart: 'always'
        depends_on:
            - db
            - mongo
        volumes:
            - media_data:/src/media
        environment:
            # Celery parameters
            QUEUE_NAME: 'correlation_analysis'  # This MUST NOT be changed
            CONCURRENCY: 2

            # NOTE: in case of changes in the 'multiomix', PostgreSQL and/or MongoDB connection parameters, they MUST be
            # changed here too!

    # Celery worker for feature selection experiments
    fs-experiments-worker:
        image: omicsdatascience/multiomix:5.2.4-celery
        restart: 'always'
        depends_on:
            - db
            - mongo
        volumes:
            - media_data:/src/media
        environment:
            # Celery parameters
            QUEUE_NAME: 'feature_selection'  # This MUST NOT be changed
            CONCURRENCY: 2

            # NOTE: in case of changes in the 'multiomix', PostgreSQL and/or MongoDB connection parameters, they MUST be
            # changed here too!

    # Celery worker for statistical validations and trained models
    stats-worker:
        image: omicsdatascience/multiomix:5.2.4-celery
        restart: 'always'
        depends_on:
            - db
            - mongo
        volumes:
            - media_data:/src/media
        environment:
            # Celery parameters
            QUEUE_NAME: 'stats'  # This MUST NOT be changed
            CONCURRENCY: 2

            # NOTE: in case of changes in the 'multiomix', PostgreSQL and/or MongoDB connection parameters, they MUST be
            # changed here too!

    # Celery worker for inference experiments
    inference-worker:
        image: omicsdatascience/multiomix:5.2.4-celery
        restart: 'always'
        depends_on:
            - db
            - mongo
        volumes:
            - media_data:/src/media
        environment:
            # Celery parameters
            QUEUE_NAME: 'inference'  # This MUST NOT be changed
            CONCURRENCY: 2

            # NOTE: in case of changes in the 'multiomix', PostgreSQL and/or MongoDB connection parameters, they MUST be
            # changed here too!

    # Celery worker for sync CGDSStudies
    sync-datasets-worker:
        image: omicsdatascience/multiomix:5.2.4-celery
        restart: 'always'
        depends_on:
            - db
            - mongo
        volumes:
            - media_data:/src/media
        environment:
            # Celery parameters
            QUEUE_NAME: 'sync_datasets'  # This MUST NOT be changed
            CONCURRENCY: 1  # NOTE: concurrency is set to minimum by default for this service

            # NOTE: in case of changes in the 'multiomix', PostgreSQL and/or MongoDB connection parameters, they MUST be
            # changed here too!

    # Django Backend Server
    multiomix:
        image: omicsdatascience/multiomix:5.2.4
        restart: 'always'
        # environment:
            # DJANGO_SETTINGS_MODULE: 'multiomics_intermediate.settings_prod'
            # ENABLE_SECURITY: 'true'

            # CSRF. Django 4.x need this.
            # Hosts separated by comma ('http://', 'https://' prefixes are mandatory)
            # Example: CSRF_TRUSTED_ORIGINS: 'http://127.0.0.1', 'http://127.0.0.1,https://127.0.0.1:8000', etc
            # CSRF_TRUSTED_ORIGINS: ''

            # Set this equal to the upstream server name in the NGINX config file in sites-available in case of
            # using HTTPS
            # ALLOWED_HOSTS: '*'  # Needed to make websockets work

            # LISTEN_PORT=8000
            # LISTEN_IP=0.0.0.0
            # RESULT_DATAFRAME_LIMIT_ROWS: 300000
            # TABLE_PAGE_SIZE: 10

            # PostgreSQL DB connection parameters (MUST match the parameters defined in the "db" service above)
            # POSTGRES_USERNAME: 'multiomics'
            # POSTGRES_PASSWORD: 'multiomics'
            # POSTGRES_HOST: 'db'
            # POSTGRES_PORT: 5432
            # POSTGRES_DB: 'multiomics'

            # Mongo DB connection parameters (MUST match the parameters defined in the "mongo" service above)
            # MONGO_USERNAME: 'multiomics'
            # MONGO_PASSWORD: 'multiomics'
            # MONGO_HOST: 'mongo'
            # MONGO_PORT: 27017
            # MONGO_DB: 'multiomics'

            # Redis
            # REDIS_HOST: 'redis'
            # REDIS_PORT: 6379
            #
            # For logging (by default LOG_FILE_PATH is /logs)
            # LOG_FILE_PATH: /path/to/folder/log
        volumes:
            - static_data:/src/static
            - media_data:/src/media
            - logs_data:/logs
        depends_on:
            - db
            - mongo
            - correlation-analysis-worker
            - fs-experiments-worker
            - stats-worker
            - inference-worker
            - sync-datasets-worker

volumes:
    mongo_data:
        external: true
        name: 'multiomics_intermediate_mongo_data'
    mongo_config:
        external: true
        name: 'multiomics_intermediate_mongo_config'
    postgres_data:
        external: true
        name: 'multiomics_intermediate_postgres_data'
    redis_data:
        external: true
        name: 'multiomics_intermediate_redis_data'
    static_data:
        external: true
        name: 'multiomics_intermediate_static_data'
    media_data:
        external: true
        name: 'multiomics_intermediate_media_data'
    logs_data:
        external: true
        name: 'multiomics_intermediate_logs_data'

